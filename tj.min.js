"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.applyMeta=exports.parse=exports.stringify=exports.deserialize=exports.serialize=void 0;function u(s){if(s===null)return{json:"null"};if(s===void 0)return{json:void 0};const i=[],f=[""],o=new Map;function t(y,e){let n;i.length&&(n=i[i.length-1],n.iteration++,n.iteration>n.count&&(n.type==="object"&&f.pop(),i.pop(),n=i[i.length-1],n.iteration++)),n&&(e=n.value[y]);let r=`${f[f.length-1]}${y}`;const g=typeof e;if(g==="object"&&e!==null){let p=0,c="undefined";if(e instanceof Date?(c="date",e=e.toISOString()):e instanceof Set?(e=Array.from(e),p=e.length,c="set"):e instanceof Map?(e=Object.fromEntries(e),p=Object.keys(e).length,c="map"):e instanceof Array?p=e.length:e instanceof RegExp?(c="regexp",e=String(e)):e instanceof Error?(c="error",e={name:e.name,message:e.message,stack:e.stack},i.push({type:"object",value:e,count:3,iteration:0})):(p=Object.keys(e).length,c="object"),c!=="undefined"&&c!=="object"&&o.set(r,c),p!==0)return i.push({type:c,value:e,count:p,iteration:0}),y&&c==="object"&&f.push(`${r}.`),e}if(g==="bigint")return o.set(r,"bigint"),String(e);if(g==="number"){if(e===Number.POSITIVE_INFINITY)return o.set(r,"infinity"),"Infinity";if(e===Number.NEGATIVE_INFINITY)return o.set(r,"-infinity"),"-Infinity";if(Number.isNaN(e))return o.set(r,"nan"),"NaN"}return typeof e=="undefined"?(o.set(r,"undefined"),null):e}return{json:JSON.stringify(s,t),meta:o.size===0?void 0:Object.fromEntries(o.entries())}}exports.serialize=u;function a({json:s,meta:i}){if(!s)return null;const f=JSON.parse(s);return i&&N(f,i),f}exports.deserialize=a;function N(s,i){const f=Object.keys(i);for(let t=0;t<f.length;t++){const b=f[t];o(s,b.split("."),i[b])}return s;function o(t,b,y,e=0){const n=b[e];if(e<b.length-1){o(t[n],b,y,e+1);return}const r=t[n];switch(y){case"date":t[n]=new Date(r);break;case"set":t[n]=new Set(r);break;case"map":t[n]=new Map(Object.entries(r));break;case"regexp":const g=/^\/(.*)\/([dgimsuy]*)$/.exec(r);if(g)t[n]=new RegExp(g[1],g[2]);else throw new Error(`Invalid regexp: ${r}`);break;case"bigint":t[n]=BigInt(r);break;case"undefined":t[n]=void 0;break;case"infinity":t[n]=Number.POSITIVE_INFINITY;break;case"-infinity":t[n]=Number.NEGATIVE_INFINITY;break;case"nan":t[n]=NaN;break;case"error":const p=new Error(r.message);p.name=r.name,p.stack=r.stack,t[n]=p;break}}}exports.applyMeta=N;function I(s){return JSON.stringify(u(s))}exports.stringify=I;function l(s){const i=JSON.parse(s);return i?a(i):null}exports.parse=l;const m={serialize:u,stringify:I,deserialize:a,parse:l,applyMeta:N};exports.default=m;
